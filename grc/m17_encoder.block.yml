id: m17_encoder
label: M17 Encoder
category: '[M17]'

templates:
  imports: import m17
  make: m17.encoder()
  callbacks:
  - set_source(${source})
  - set_destination(${destination})

asserts:
- ${len(source) < 10}
- ${len(destination) < 10}

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: source
  label: Source Address
  dtype: string
  default: 
- id: destination 
  label: Destination Address 
  dtype: string
  default: Broadcast

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: Audio
  domain: stream
  dtype: float

outputs:
- label: Bitstream
  domain: stream
  dtype: byte 

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
